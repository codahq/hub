/**
 * Copyright (c) 2021-2022 by the respective copyright holders.
 * All rights reserved.
 * <p>
 * This file is part of Parrot Home Automation Hub.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.parrotha.zwave.commandclasses;

import com.parrotha.zwave.internal.BeanUtils;

import java.lang.reflect.InvocationTargetException;
import java.util.Map;

/**
 * Note: This code is autogenerated, changes will be overwritten.
 */
public class AlarmV2 {
    public com.parrotha.zwave.commands.alarmv2.AlarmGet alarmGet() {
        return new com.parrotha.zwave.commands.alarmv2.AlarmGet();
    }

    public com.parrotha.zwave.commands.alarmv2.AlarmGet alarmGet(Map values) throws InvocationTargetException, IllegalAccessException {
        com.parrotha.zwave.commands.alarmv2.AlarmGet cmd = new com.parrotha.zwave.commands.alarmv2.AlarmGet();
        BeanUtils.populate(cmd, values);
        return cmd;
    }

    public com.parrotha.zwave.commands.alarmv2.AlarmReport alarmReport() {
        return new com.parrotha.zwave.commands.alarmv2.AlarmReport();
    }

    public com.parrotha.zwave.commands.alarmv2.AlarmReport alarmReport(Map values) throws InvocationTargetException, IllegalAccessException {
        com.parrotha.zwave.commands.alarmv2.AlarmReport cmd = new com.parrotha.zwave.commands.alarmv2.AlarmReport();
        BeanUtils.populate(cmd, values);
        return cmd;
    }

    public com.parrotha.zwave.commands.alarmv2.AlarmSet alarmSet() {
        return new com.parrotha.zwave.commands.alarmv2.AlarmSet();
    }

    public com.parrotha.zwave.commands.alarmv2.AlarmSet alarmSet(Map values) throws InvocationTargetException, IllegalAccessException {
        com.parrotha.zwave.commands.alarmv2.AlarmSet cmd = new com.parrotha.zwave.commands.alarmv2.AlarmSet();
        BeanUtils.populate(cmd, values);
        return cmd;
    }

    public com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedGet alarmTypeSupportedGet() {
        return new com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedGet();
    }

    public com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedGet alarmTypeSupportedGet(Map values) throws InvocationTargetException, IllegalAccessException {
        com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedGet cmd = new com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedGet();
        BeanUtils.populate(cmd, values);
        return cmd;
    }

    public com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedReport alarmTypeSupportedReport() {
        return new com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedReport();
    }

    public com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedReport alarmTypeSupportedReport(Map values) throws InvocationTargetException, IllegalAccessException {
        com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedReport cmd = new com.parrotha.zwave.commands.alarmv2.AlarmTypeSupportedReport();
        BeanUtils.populate(cmd, values);
        return cmd;
    }

}
