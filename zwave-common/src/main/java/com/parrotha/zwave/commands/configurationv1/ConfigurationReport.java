/**
 * Copyright (c) 2021-2022 by the respective copyright holders.
 * All rights reserved.
 * <p>
 * This file is part of Parrot Home Automation Hub.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.parrotha.zwave.commands.configurationv1;

import com.parrotha.zwave.Command;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Note: This code is autogenerated, changes will be overwritten.
 */
public class ConfigurationReport extends Command {
    public String getCMD() {
        return "7006";
    }

    private Short parameterNumber = 0;
    private Short size = 0;
    private List<Short> configurationValue;

    public Short getParameterNumber() {
        return parameterNumber;
    }

    public void setParameterNumber(Short parameterNumber) {
        this.parameterNumber = parameterNumber;
    }

    public Short getSize() {
        return size;
    }

    public void setSize(Short size) {
        this.size = size;
    }

    public List<Short> getConfigurationValue() {
        return configurationValue;
    }

    public void setConfigurationValue(List<Short> configurationValue) {
        this.configurationValue = configurationValue;
    }

    public List<Short> getPayload() {
        Short data1 = (short) ((size & 7));

        List<Short> retList = Stream.of(parameterNumber, data1).collect(Collectors.toList());
        retList.addAll(configurationValue);
        return retList;
    }

    public void setPayload(List<Short> payload) {
        if (payload == null) return;
        if (payload.size() > 0) {
            parameterNumber = payload.get(0);
        }
        if (payload.size() > 1) {
            size = (short) (payload.get(1) & 7);
        }
        if (payload.size() > 2) {
            configurationValue = payload.subList(2, (payload.size() - 1));
        }
    }

    @Override
    public String toString() {
        return "ConfigurationReport(" +
                "parameterNumber: " + parameterNumber +
                ", size: " + size +
                ", configurationValue: " + configurationValue +
                ')';
    }
}
