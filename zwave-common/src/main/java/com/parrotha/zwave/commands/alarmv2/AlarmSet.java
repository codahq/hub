/**
 * Copyright (c) 2021-2022 by the respective copyright holders.
 * All rights reserved.
 * <p>
 * This file is part of Parrot Home Automation Hub.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.parrotha.zwave.commands.alarmv2;

import com.parrotha.zwave.Command;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Note: This code is autogenerated, changes will be overwritten.
 */
public class AlarmSet extends Command {
    public static final Short ZWAVE_ALARM_TYPE_RESERVED0 = 0;
    public static final Short ZWAVE_ALARM_TYPE_SMOKE = 1;
    public static final Short ZWAVE_ALARM_TYPE_CO = 2;
    public static final Short ZWAVE_ALARM_TYPE_CO2 = 3;
    public static final Short ZWAVE_ALARM_TYPE_HEAT = 4;
    public static final Short ZWAVE_ALARM_TYPE_WATER = 5;
    public static final Short ZWAVE_ALARM_TYPE_ACCESS_CONTROL = 6;
    public static final Short ZWAVE_ALARM_TYPE_BURGLAR = 7;
    public static final Short ZWAVE_ALARM_TYPE_POWER_MANAGEMENT = 8;
    public static final Short ZWAVE_ALARM_TYPE_SYSTEM = 9;
    public static final Short ZWAVE_ALARM_TYPE_EMERGENCY = 10;
    public static final Short ZWAVE_ALARM_TYPE_CLOCK = 11;
    public static final Short ZWAVE_ALARM_TYPE_FIRST = 255;

    public String getCMD() {
        return "7106";
    }

    private Short zwaveAlarmType = 0;
    private Short zwaveAlarmStatus = 0;

    public Short getZwaveAlarmType() {
        return zwaveAlarmType;
    }

    public void setZwaveAlarmType(Short zwaveAlarmType) {
        this.zwaveAlarmType = zwaveAlarmType;
    }

    public Short getZwaveAlarmStatus() {
        return zwaveAlarmStatus;
    }

    public void setZwaveAlarmStatus(Short zwaveAlarmStatus) {
        this.zwaveAlarmStatus = zwaveAlarmStatus;
    }

    public List<Short> getPayload() {
        return Stream.of(zwaveAlarmType, zwaveAlarmStatus).collect(Collectors.toList());
    }

    public void setPayload(List<Short> payload) {
        if (payload == null) return;
        if (payload.size() > 0) {
            zwaveAlarmType = payload.get(0);
        }
        if (payload.size() > 1) {
            zwaveAlarmStatus = payload.get(1);
        }
    }

    @Override
    public String toString() {
        return "AlarmSet(" +
                "zwaveAlarmType: " + zwaveAlarmType +
                ", zwaveAlarmStatus: " + zwaveAlarmStatus +
                ')';
    }
}
