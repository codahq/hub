/**
 * Copyright (c) 2021-2022 by the respective copyright holders.
 * All rights reserved.
 * <p>
 * This file is part of Parrot Home Automation Hub.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.parrotha.zwave.commands.versionv3;

import com.parrotha.zwave.Command;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Note: This code is autogenerated, changes will be overwritten.
 */
public class VersionZWaveSoftwareGet extends Command {
    public String getCMD() {
        return "8617";
    }

    private Short sdkVersion1 = 0;
    private Short sdkVersion2 = 0;
    private Short sdkVersion3 = 0;
    private Short zWaveApplicationFrameworkAPIVersion1 = 0;
    private Short zWaveApplicationFrameworkAPIVersion2 = 0;
    private Short zWaveApplicationFrameworkAPIVersion3 = 0;
    private Short zWaveApplicationFrameworkBuildNumber1 = 0;
    private Short zWaveApplicationFrameworkBuildNumber2 = 0;
    private Short hostInterfaceVersion1 = 0;
    private Short hostInterfaceVersion2 = 0;
    private Short hostInterfaceVersion3 = 0;
    private Short hostInterfaceBuildNumber1 = 0;
    private Short hostInterfaceBuildNumber2 = 0;
    private Short zWaveProtocolVersion1 = 0;
    private Short zWaveProtocolVersion2 = 0;
    private Short zWaveProtocolVersion3 = 0;
    private Short zWaveProtocolBuildNumber1 = 0;
    private Short zWaveProtocolBuildNumber2 = 0;
    private Short applicationVersion1 = 0;
    private Short applicationVersion2 = 0;
    private Short applicationVersion3 = 0;
    private Short applicationBuildNumber1 = 0;
    private Short applicationBuildNumber2 = 0;

    public Short getSdkVersion1() {
        return sdkVersion1;
    }

    public void setSdkVersion1(Short sdkVersion1) {
        this.sdkVersion1 = sdkVersion1;
    }

    public Short getSdkVersion2() {
        return sdkVersion2;
    }

    public void setSdkVersion2(Short sdkVersion2) {
        this.sdkVersion2 = sdkVersion2;
    }

    public Short getSdkVersion3() {
        return sdkVersion3;
    }

    public void setSdkVersion3(Short sdkVersion3) {
        this.sdkVersion3 = sdkVersion3;
    }

    public Short getZWaveApplicationFrameworkAPIVersion1() {
        return zWaveApplicationFrameworkAPIVersion1;
    }

    public void setZWaveApplicationFrameworkAPIVersion1(Short zWaveApplicationFrameworkAPIVersion1) {
        this.zWaveApplicationFrameworkAPIVersion1 = zWaveApplicationFrameworkAPIVersion1;
    }

    public Short getZWaveApplicationFrameworkAPIVersion2() {
        return zWaveApplicationFrameworkAPIVersion2;
    }

    public void setZWaveApplicationFrameworkAPIVersion2(Short zWaveApplicationFrameworkAPIVersion2) {
        this.zWaveApplicationFrameworkAPIVersion2 = zWaveApplicationFrameworkAPIVersion2;
    }

    public Short getZWaveApplicationFrameworkAPIVersion3() {
        return zWaveApplicationFrameworkAPIVersion3;
    }

    public void setZWaveApplicationFrameworkAPIVersion3(Short zWaveApplicationFrameworkAPIVersion3) {
        this.zWaveApplicationFrameworkAPIVersion3 = zWaveApplicationFrameworkAPIVersion3;
    }

    public Short getZWaveApplicationFrameworkBuildNumber1() {
        return zWaveApplicationFrameworkBuildNumber1;
    }

    public void setZWaveApplicationFrameworkBuildNumber1(Short zWaveApplicationFrameworkBuildNumber1) {
        this.zWaveApplicationFrameworkBuildNumber1 = zWaveApplicationFrameworkBuildNumber1;
    }

    public Short getZWaveApplicationFrameworkBuildNumber2() {
        return zWaveApplicationFrameworkBuildNumber2;
    }

    public void setZWaveApplicationFrameworkBuildNumber2(Short zWaveApplicationFrameworkBuildNumber2) {
        this.zWaveApplicationFrameworkBuildNumber2 = zWaveApplicationFrameworkBuildNumber2;
    }

    public Short getHostInterfaceVersion1() {
        return hostInterfaceVersion1;
    }

    public void setHostInterfaceVersion1(Short hostInterfaceVersion1) {
        this.hostInterfaceVersion1 = hostInterfaceVersion1;
    }

    public Short getHostInterfaceVersion2() {
        return hostInterfaceVersion2;
    }

    public void setHostInterfaceVersion2(Short hostInterfaceVersion2) {
        this.hostInterfaceVersion2 = hostInterfaceVersion2;
    }

    public Short getHostInterfaceVersion3() {
        return hostInterfaceVersion3;
    }

    public void setHostInterfaceVersion3(Short hostInterfaceVersion3) {
        this.hostInterfaceVersion3 = hostInterfaceVersion3;
    }

    public Short getHostInterfaceBuildNumber1() {
        return hostInterfaceBuildNumber1;
    }

    public void setHostInterfaceBuildNumber1(Short hostInterfaceBuildNumber1) {
        this.hostInterfaceBuildNumber1 = hostInterfaceBuildNumber1;
    }

    public Short getHostInterfaceBuildNumber2() {
        return hostInterfaceBuildNumber2;
    }

    public void setHostInterfaceBuildNumber2(Short hostInterfaceBuildNumber2) {
        this.hostInterfaceBuildNumber2 = hostInterfaceBuildNumber2;
    }

    public Short getZWaveProtocolVersion1() {
        return zWaveProtocolVersion1;
    }

    public void setZWaveProtocolVersion1(Short zWaveProtocolVersion1) {
        this.zWaveProtocolVersion1 = zWaveProtocolVersion1;
    }

    public Short getZWaveProtocolVersion2() {
        return zWaveProtocolVersion2;
    }

    public void setZWaveProtocolVersion2(Short zWaveProtocolVersion2) {
        this.zWaveProtocolVersion2 = zWaveProtocolVersion2;
    }

    public Short getZWaveProtocolVersion3() {
        return zWaveProtocolVersion3;
    }

    public void setZWaveProtocolVersion3(Short zWaveProtocolVersion3) {
        this.zWaveProtocolVersion3 = zWaveProtocolVersion3;
    }

    public Short getZWaveProtocolBuildNumber1() {
        return zWaveProtocolBuildNumber1;
    }

    public void setZWaveProtocolBuildNumber1(Short zWaveProtocolBuildNumber1) {
        this.zWaveProtocolBuildNumber1 = zWaveProtocolBuildNumber1;
    }

    public Short getZWaveProtocolBuildNumber2() {
        return zWaveProtocolBuildNumber2;
    }

    public void setZWaveProtocolBuildNumber2(Short zWaveProtocolBuildNumber2) {
        this.zWaveProtocolBuildNumber2 = zWaveProtocolBuildNumber2;
    }

    public Short getApplicationVersion1() {
        return applicationVersion1;
    }

    public void setApplicationVersion1(Short applicationVersion1) {
        this.applicationVersion1 = applicationVersion1;
    }

    public Short getApplicationVersion2() {
        return applicationVersion2;
    }

    public void setApplicationVersion2(Short applicationVersion2) {
        this.applicationVersion2 = applicationVersion2;
    }

    public Short getApplicationVersion3() {
        return applicationVersion3;
    }

    public void setApplicationVersion3(Short applicationVersion3) {
        this.applicationVersion3 = applicationVersion3;
    }

    public Short getApplicationBuildNumber1() {
        return applicationBuildNumber1;
    }

    public void setApplicationBuildNumber1(Short applicationBuildNumber1) {
        this.applicationBuildNumber1 = applicationBuildNumber1;
    }

    public Short getApplicationBuildNumber2() {
        return applicationBuildNumber2;
    }

    public void setApplicationBuildNumber2(Short applicationBuildNumber2) {
        this.applicationBuildNumber2 = applicationBuildNumber2;
    }

    public List<Short> getPayload() {
        return Stream.of(sdkVersion1, sdkVersion2, sdkVersion3, zWaveApplicationFrameworkAPIVersion1, zWaveApplicationFrameworkAPIVersion2, zWaveApplicationFrameworkAPIVersion3, zWaveApplicationFrameworkBuildNumber1, zWaveApplicationFrameworkBuildNumber2, hostInterfaceVersion1, hostInterfaceVersion2, hostInterfaceVersion3, hostInterfaceBuildNumber1, hostInterfaceBuildNumber2, zWaveProtocolVersion1, zWaveProtocolVersion2, zWaveProtocolVersion3, zWaveProtocolBuildNumber1, zWaveProtocolBuildNumber2, applicationVersion1, applicationVersion2, applicationVersion3, applicationBuildNumber1, applicationBuildNumber2).collect(Collectors.toList());
    }

    public void setPayload(List<Short> payload) {
        if (payload == null) return;
        if (payload.size() > 0) {
            sdkVersion1 = payload.get(0);
        }
        if (payload.size() > 1) {
            sdkVersion2 = payload.get(1);
        }
        if (payload.size() > 2) {
            sdkVersion3 = payload.get(2);
        }
        if (payload.size() > 3) {
            zWaveApplicationFrameworkAPIVersion1 = payload.get(3);
        }
        if (payload.size() > 4) {
            zWaveApplicationFrameworkAPIVersion2 = payload.get(4);
        }
        if (payload.size() > 5) {
            zWaveApplicationFrameworkAPIVersion3 = payload.get(5);
        }
        if (payload.size() > 6) {
            zWaveApplicationFrameworkBuildNumber1 = payload.get(6);
        }
        if (payload.size() > 7) {
            zWaveApplicationFrameworkBuildNumber2 = payload.get(7);
        }
        if (payload.size() > 8) {
            hostInterfaceVersion1 = payload.get(8);
        }
        if (payload.size() > 9) {
            hostInterfaceVersion2 = payload.get(9);
        }
        if (payload.size() > 10) {
            hostInterfaceVersion3 = payload.get(10);
        }
        if (payload.size() > 11) {
            hostInterfaceBuildNumber1 = payload.get(11);
        }
        if (payload.size() > 12) {
            hostInterfaceBuildNumber2 = payload.get(12);
        }
        if (payload.size() > 13) {
            zWaveProtocolVersion1 = payload.get(13);
        }
        if (payload.size() > 14) {
            zWaveProtocolVersion2 = payload.get(14);
        }
        if (payload.size() > 15) {
            zWaveProtocolVersion3 = payload.get(15);
        }
        if (payload.size() > 16) {
            zWaveProtocolBuildNumber1 = payload.get(16);
        }
        if (payload.size() > 17) {
            zWaveProtocolBuildNumber2 = payload.get(17);
        }
        if (payload.size() > 18) {
            applicationVersion1 = payload.get(18);
        }
        if (payload.size() > 19) {
            applicationVersion2 = payload.get(19);
        }
        if (payload.size() > 20) {
            applicationVersion3 = payload.get(20);
        }
        if (payload.size() > 21) {
            applicationBuildNumber1 = payload.get(21);
        }
        if (payload.size() > 22) {
            applicationBuildNumber2 = payload.get(22);
        }
    }

    @Override
    public String toString() {
        return "VersionZWaveSoftwareGet(" +
                "sdkVersion1: " + sdkVersion1 +
                ", sdkVersion2: " + sdkVersion2 +
                ", sdkVersion3: " + sdkVersion3 +
                ", zWaveApplicationFrameworkAPIVersion1: " + zWaveApplicationFrameworkAPIVersion1 +
                ", zWaveApplicationFrameworkAPIVersion2: " + zWaveApplicationFrameworkAPIVersion2 +
                ", zWaveApplicationFrameworkAPIVersion3: " + zWaveApplicationFrameworkAPIVersion3 +
                ", zWaveApplicationFrameworkBuildNumber1: " + zWaveApplicationFrameworkBuildNumber1 +
                ", zWaveApplicationFrameworkBuildNumber2: " + zWaveApplicationFrameworkBuildNumber2 +
                ", hostInterfaceVersion1: " + hostInterfaceVersion1 +
                ", hostInterfaceVersion2: " + hostInterfaceVersion2 +
                ", hostInterfaceVersion3: " + hostInterfaceVersion3 +
                ", hostInterfaceBuildNumber1: " + hostInterfaceBuildNumber1 +
                ", hostInterfaceBuildNumber2: " + hostInterfaceBuildNumber2 +
                ", zWaveProtocolVersion1: " + zWaveProtocolVersion1 +
                ", zWaveProtocolVersion2: " + zWaveProtocolVersion2 +
                ", zWaveProtocolVersion3: " + zWaveProtocolVersion3 +
                ", zWaveProtocolBuildNumber1: " + zWaveProtocolBuildNumber1 +
                ", zWaveProtocolBuildNumber2: " + zWaveProtocolBuildNumber2 +
                ", applicationVersion1: " + applicationVersion1 +
                ", applicationVersion2: " + applicationVersion2 +
                ", applicationVersion3: " + applicationVersion3 +
                ", applicationBuildNumber1: " + applicationBuildNumber1 +
                ", applicationBuildNumber2: " + applicationBuildNumber2 +
                ')';
    }
}
