/**
 * Copyright (c) 2021-2023 by the respective copyright holders.
 * All rights reserved.
 * <p>
 * This file is part of Parrot Home Automation Hub.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.parrotha.zwave.commands.networkmanagementbasicv1;

import com.parrotha.zwave.Command;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Note: This code is autogenerated, changes will be overwritten.
 */
public class LearnModeSetStatus extends Command {
    public static final Short LEARN_MODE_DONE = 6;
    public static final Short LEARN_MODE_FAILED = 7;
    public static final Short LEARN_MODE_SECURITY_FAILED = 9;

    public String getCMD() {
        return "4D02";
    }

    private Short seqNo = 0;
    private Short status = 0;
    private Short newNodeId = 0;

    public Short getSeqNo() {
        return seqNo;
    }

    public void setSeqNo(Short seqNo) {
        this.seqNo = seqNo;
    }

    public Short getStatus() {
        return status;
    }

    public void setStatus(Short status) {
        this.status = status;
    }

    public Short getNewNodeId() {
        return newNodeId;
    }

    public void setNewNodeId(Short newNodeId) {
        this.newNodeId = newNodeId;
    }

    public List<Short> getPayload() {
        return Stream.of(seqNo, status, (short) 0, newNodeId).collect(Collectors.toList());
    }

    public void setPayload(List<Short> payload) {
        if (payload == null) return;
        if (payload.size() > 0) {
            seqNo = payload.get(0);
        }
        if (payload.size() > 1) {
            status = payload.get(1);
        }
        if (payload.size() > 3) {
            newNodeId = payload.get(3);
        }
    }

    @Override
    public String toString() {
        return "LearnModeSetStatus(" +
                "seqNo: " + seqNo +
                ", status: " + status +
                ", newNodeId: " + newNodeId +
                ')';
    }
}
