/**
 * Copyright (c) 2021-2022 by the respective copyright holders.
 * All rights reserved.
 * <p>
 * This file is part of Parrot Home Automation Hub.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.parrotha.zwave.commands.versionv1;

import com.parrotha.zwave.Command;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Note: This code is autogenerated, changes will be overwritten.
 */
public class VersionReport extends Command {
    public static final Short LIBRARY_TYPE_STATIC_CONTROLLER = 1;
    public static final Short LIBRARY_TYPE_CONTROLLER = 2;
    public static final Short LIBRARY_TYPE_ENHANCED_SLAVE = 3;
    public static final Short LIBRARY_TYPE_SLAVE = 4;
    public static final Short LIBRARY_TYPE_INSTALLER = 5;
    public static final Short LIBRARY_TYPE_ROUTING_SLAVE = 6;
    public static final Short LIBRARY_TYPE_BRIDGE_CONTROLLER = 7;
    public static final Short LIBRARY_TYPE_DEVICE_UNDER_TEST = 8;
    public static final Short LIBRARY_TYPE_AV_REMOTE = 10;
    public static final Short LIBRARY_TYPE_AV_DEVICE = 11;

    public String getCMD() {
        return "8612";
    }

    private Short zWaveLibraryType = 0;
    private Short zWaveProtocolVersion = 0;
    private Short zWaveProtocolSubVersion = 0;
    private Short applicationVersion = 0;
    private Short applicationSubVersion = 0;

    public Short getZWaveLibraryType() {
        return zWaveLibraryType;
    }

    public void setZWaveLibraryType(Short zWaveLibraryType) {
        this.zWaveLibraryType = zWaveLibraryType;
    }

    public Short getZWaveProtocolVersion() {
        return zWaveProtocolVersion;
    }

    public void setZWaveProtocolVersion(Short zWaveProtocolVersion) {
        this.zWaveProtocolVersion = zWaveProtocolVersion;
    }

    public Short getZWaveProtocolSubVersion() {
        return zWaveProtocolSubVersion;
    }

    public void setZWaveProtocolSubVersion(Short zWaveProtocolSubVersion) {
        this.zWaveProtocolSubVersion = zWaveProtocolSubVersion;
    }

    public Short getApplicationVersion() {
        return applicationVersion;
    }

    public void setApplicationVersion(Short applicationVersion) {
        this.applicationVersion = applicationVersion;
    }

    public Short getApplicationSubVersion() {
        return applicationSubVersion;
    }

    public void setApplicationSubVersion(Short applicationSubVersion) {
        this.applicationSubVersion = applicationSubVersion;
    }

    public List<Short> getPayload() {
        return Stream.of(zWaveLibraryType, zWaveProtocolVersion, zWaveProtocolSubVersion, applicationVersion, applicationSubVersion).collect(Collectors.toList());
    }

    public void setPayload(List<Short> payload) {
        if (payload == null) return;
        if (payload.size() > 0) {
            zWaveLibraryType = payload.get(0);
        }
        if (payload.size() > 1) {
            zWaveProtocolVersion = payload.get(1);
        }
        if (payload.size() > 2) {
            zWaveProtocolSubVersion = payload.get(2);
        }
        if (payload.size() > 3) {
            applicationVersion = payload.get(3);
        }
        if (payload.size() > 4) {
            applicationSubVersion = payload.get(4);
        }
    }

    @Override
    public String toString() {
        return "VersionReport(" +
                "zWaveLibraryType: " + zWaveLibraryType +
                ", zWaveProtocolVersion: " + zWaveProtocolVersion +
                ", zWaveProtocolSubVersion: " + zWaveProtocolSubVersion +
                ", applicationVersion: " + applicationVersion +
                ", applicationSubVersion: " + applicationSubVersion +
                ')';
    }
}
