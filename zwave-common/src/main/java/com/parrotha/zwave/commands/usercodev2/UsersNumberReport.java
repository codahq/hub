/**
 * Copyright (c) 2021-2022 by the respective copyright holders.
 * All rights reserved.
 * <p>
 * This file is part of Parrot Home Automation Hub.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.parrotha.zwave.commands.usercodev2;

import com.parrotha.internal.utils.HexUtils;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Note: This code is autogenerated, changes will be overwritten.
 */
public class UsersNumberReport extends com.parrotha.zwave.commands.usercodev1.UsersNumberReport {
    private Short supportedUsers = 0;
    private Integer extendedSupportedUsers = 0;

    public Short getSupportedUsers() {
        return supportedUsers;
    }

    public void setSupportedUsers(Short supportedUsers) {
        this.supportedUsers = supportedUsers;
    }

    public Integer getExtendedSupportedUsers() {
        return extendedSupportedUsers;
    }

    public void setExtendedSupportedUsers(Integer extendedSupportedUsers) {
        this.extendedSupportedUsers = extendedSupportedUsers;
    }

    public List<Short> getPayload() {
        List<Short> retList = Stream.of(supportedUsers).collect(Collectors.toList());
        retList.addAll(HexUtils.integerToShortList(extendedSupportedUsers, 2));
        return retList;
    }

    public void setPayload(List<Short> payload) {
        if (payload == null) return;
        if (payload.size() > 0) {
            supportedUsers = payload.get(0);
        }
        if (payload.size() > 3) {
            extendedSupportedUsers = HexUtils.shortListToInteger(payload.subList(1, 3));
        }
    }

    @Override
    public String toString() {
        return "UsersNumberReport(" +
                "supportedUsers: " + supportedUsers +
                ", extendedSupportedUsers: " + extendedSupportedUsers +
                ')';
    }
}
